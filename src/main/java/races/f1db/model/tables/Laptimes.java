/*
 * This file is generated by jOOQ.
 */
package races.f1db.model.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import races.f1db.model.Indexes;
import races.f1db.model.Keys;
import races.f1db.model.Public;
import races.f1db.model.tables.records.LaptimesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Laptimes extends TableImpl<LaptimesRecord> {

    private static final long serialVersionUID = -1413720147;

    /**
     * The reference instance of <code>public.laptimes</code>
     */
    public static final Laptimes LAPTIMES = new Laptimes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LaptimesRecord> getRecordType() {
        return LaptimesRecord.class;
    }

    /**
     * The column <code>public.laptimes.raceid</code>.
     */
    public final TableField<LaptimesRecord, Integer> RACEID = createField("raceid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.laptimes.driverid</code>.
     */
    public final TableField<LaptimesRecord, Integer> DRIVERID = createField("driverid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.laptimes.lap</code>.
     */
    public final TableField<LaptimesRecord, Integer> LAP = createField("lap", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.laptimes.position</code>.
     */
    public final TableField<LaptimesRecord, Integer> POSITION = createField("position", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.laptimes.time</code>.
     */
    public final TableField<LaptimesRecord, String> TIME = createField("time", org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.laptimes.milliseconds</code>.
     */
    public final TableField<LaptimesRecord, Integer> MILLISECONDS = createField("milliseconds", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.laptimes</code> table reference
     */
    public Laptimes() {
        this(DSL.name("laptimes"), null);
    }

    /**
     * Create an aliased <code>public.laptimes</code> table reference
     */
    public Laptimes(String alias) {
        this(DSL.name(alias), LAPTIMES);
    }

    /**
     * Create an aliased <code>public.laptimes</code> table reference
     */
    public Laptimes(Name alias) {
        this(alias, LAPTIMES);
    }

    private Laptimes(Name alias, Table<LaptimesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Laptimes(Name alias, Table<LaptimesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Laptimes(Table<O> child, ForeignKey<O, LaptimesRecord> key) {
        super(child, key, LAPTIMES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INDEX_ID, Indexes.LAPTIMES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LaptimesRecord> getPrimaryKey() {
        return Keys.LAPTIMES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LaptimesRecord>> getKeys() {
        return Arrays.<UniqueKey<LaptimesRecord>>asList(Keys.LAPTIMES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Laptimes as(String alias) {
        return new Laptimes(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Laptimes as(Name alias) {
        return new Laptimes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Laptimes rename(String name) {
        return new Laptimes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Laptimes rename(Name name) {
        return new Laptimes(name, null);
    }
}
