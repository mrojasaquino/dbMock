/*
 * This file is generated by jOOQ.
 */
package races.f1db.model.tables.records;


import java.sql.Time;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import races.f1db.model.tables.Pitstops;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PitstopsRecord extends UpdatableRecordImpl<PitstopsRecord> implements Record7<Integer, Integer, Integer, Integer, Time, String, Integer> {

    private static final long serialVersionUID = -1970160749;

    /**
     * Setter for <code>public.pitstops.raceid</code>.
     */
    public void setRaceid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.pitstops.raceid</code>.
     */
    public Integer getRaceid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.pitstops.driverid</code>.
     */
    public void setDriverid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.pitstops.driverid</code>.
     */
    public Integer getDriverid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.pitstops.stop</code>.
     */
    public void setStop(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.pitstops.stop</code>.
     */
    public Integer getStop() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.pitstops.lap</code>.
     */
    public void setLap(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.pitstops.lap</code>.
     */
    public Integer getLap() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.pitstops.time</code>.
     */
    public void setTime(Time value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.pitstops.time</code>.
     */
    public Time getTime() {
        return (Time) get(4);
    }

    /**
     * Setter for <code>public.pitstops.duration</code>.
     */
    public void setDuration(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.pitstops.duration</code>.
     */
    public String getDuration() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.pitstops.milliseconds</code>.
     */
    public void setMilliseconds(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.pitstops.milliseconds</code>.
     */
    public Integer getMilliseconds() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record3<Integer, Integer, Integer> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Integer, Integer, Time, String, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Integer, Integer, Time, String, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Pitstops.PITSTOPS.RACEID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Pitstops.PITSTOPS.DRIVERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Pitstops.PITSTOPS.STOP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Pitstops.PITSTOPS.LAP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Time> field5() {
        return Pitstops.PITSTOPS.TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Pitstops.PITSTOPS.DURATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Pitstops.PITSTOPS.MILLISECONDS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getRaceid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getDriverid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getStop();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getLap();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Time component5() {
        return getTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getDuration();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getMilliseconds();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getRaceid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getDriverid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getStop();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getLap();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Time value5() {
        return getTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getDuration();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getMilliseconds();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PitstopsRecord value1(Integer value) {
        setRaceid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PitstopsRecord value2(Integer value) {
        setDriverid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PitstopsRecord value3(Integer value) {
        setStop(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PitstopsRecord value4(Integer value) {
        setLap(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PitstopsRecord value5(Time value) {
        setTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PitstopsRecord value6(String value) {
        setDuration(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PitstopsRecord value7(Integer value) {
        setMilliseconds(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PitstopsRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Time value5, String value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PitstopsRecord
     */
    public PitstopsRecord() {
        super(Pitstops.PITSTOPS);
    }

    /**
     * Create a detached, initialised PitstopsRecord
     */
    public PitstopsRecord(Integer raceid, Integer driverid, Integer stop, Integer lap, Time time, String duration, Integer milliseconds) {
        super(Pitstops.PITSTOPS);

        set(0, raceid);
        set(1, driverid);
        set(2, stop);
        set(3, lap);
        set(4, time);
        set(5, duration);
        set(6, milliseconds);
    }
}
